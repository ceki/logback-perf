➜  logback-perf git:(master) ✗ java -jar target/benchmarks.jar ".*FileAppenderBenchmark.*" -f 1 -tu ms -wi 2 -i 4 -to 3 -t 1
# JMH version: 1.29
# VM version: JDK 17.0.7, OpenJDK 64-Bit Server VM, 17.0.7+7-LTS
# VM invoker: /Users/mariankazimir/Library/Java/JavaVirtualMachines/corretto-17.0.7/Contents/Home/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint
# Warmup: 2 iterations, 10 s each
# Measurement: 4 iterations, 10 s each
# Timeout: 3 s per iteration, ***WARNING: The timeout might be too low!***
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: ch.qos.logback.perf.AsyncWithFileAppenderBenchmark.log4j2AsyncFile

# Run progress: 0.00% complete, ETA 00:06:00
# Fork: 1 of 1
# Warmup Iteration   1: Deleting files if existent.
3215.446 ops/ms
# Warmup Iteration   2: 2889.386 ops/ms
Iteration   1: 3000.786 ops/ms
Iteration   2: 3084.032 ops/ms
Iteration   3: 3019.224 ops/ms
Iteration   4: 2910.935 ops/ms


Result "ch.qos.logback.perf.AsyncWithFileAppenderBenchmark.log4j2AsyncFile":
  3003.744 ±(99.9%) 461.601 ops/ms [Average]
  (min, avg, max) = (2910.935, 3003.744, 3084.032), stdev = 71.433
  CI (99.9%): [2542.143, 3465.345] (assumes normal distribution)


# JMH version: 1.29
# VM version: JDK 17.0.7, OpenJDK 64-Bit Server VM, 17.0.7+7-LTS
# VM invoker: /Users/mariankazimir/Library/Java/JavaVirtualMachines/corretto-17.0.7/Contents/Home/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint
# Warmup: 2 iterations, 10 s each
# Measurement: 4 iterations, 10 s each
# Timeout: 3 s per iteration, ***WARNING: The timeout might be too low!***
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: ch.qos.logback.perf.AsyncWithFileAppenderBenchmark.logbackFile

# Run progress: 16.67% complete, ETA 00:05:02
# Fork: 1 of 1
# Warmup Iteration   1: Deleting files if existent.
About to delete [target/test-output/logback-async-perf.log]
About to delete [target/test-output/log4j2-async-perf.log]
About to delete [target/test-output/log4j-async-perf.log]
4921.062 ops/ms
# Warmup Iteration   2: 5285.604 ops/ms
Iteration   1: 4850.742 ops/ms
Iteration   2: 4100.518 ops/ms
Iteration   3: 3903.918 ops/ms
Iteration   4: 3823.438 ops/ms


Result "ch.qos.logback.perf.AsyncWithFileAppenderBenchmark.logbackFile":
  4169.654 ±(99.9%) 3028.969 ops/ms [Average]
  (min, avg, max) = (3823.438, 4169.654, 4850.742), stdev = 468.736
  CI (99.9%): [1140.685, 7198.623] (assumes normal distribution)


# JMH version: 1.29
# VM version: JDK 17.0.7, OpenJDK 64-Bit Server VM, 17.0.7+7-LTS
# VM invoker: /Users/mariankazimir/Library/Java/JavaVirtualMachines/corretto-17.0.7/Contents/Home/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint
# Warmup: 2 iterations, 10 s each
# Measurement: 4 iterations, 10 s each
# Timeout: 3 s per iteration, ***WARNING: The timeout might be too low!***
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: ch.qos.logback.perf.AsyncWithFileAppenderBenchmark.reload4jFile

# Run progress: 33.33% complete, ETA 00:04:02
# Fork: 1 of 1
# Warmup Iteration   1: Deleting files if existent.
About to delete [target/test-output/logback-async-perf.log]
About to delete [target/test-output/log4j2-async-perf.log]
About to delete [target/test-output/log4j-async-perf.log]
2621.364 ops/ms
# Warmup Iteration   2: 2623.160 ops/ms
Iteration   1: 2649.261 ops/ms
Iteration   2: 2515.900 ops/ms
Iteration   3: 2439.778 ops/ms
Iteration   4: 2430.602 ops/ms


Result "ch.qos.logback.perf.AsyncWithFileAppenderBenchmark.reload4jFile":
  2508.885 ±(99.9%) 653.253 ops/ms [Average]
  (min, avg, max) = (2430.602, 2508.885, 2649.261), stdev = 101.092
  CI (99.9%): [1855.633, 3162.138] (assumes normal distribution)


# JMH version: 1.29
# VM version: JDK 17.0.7, OpenJDK 64-Bit Server VM, 17.0.7+7-LTS
# VM invoker: /Users/mariankazimir/Library/Java/JavaVirtualMachines/corretto-17.0.7/Contents/Home/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint
# Warmup: 2 iterations, 10 s each
# Measurement: 4 iterations, 10 s each
# Timeout: 3 s per iteration, ***WARNING: The timeout might be too low!***
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: ch.qos.logback.perf.FileAppenderBenchmark.log4j2File

# Run progress: 50.00% complete, ETA 00:03:02
# Fork: 1 of 1
# Warmup Iteration   1: WARNING: sun.reflect.Reflection.getCallerClass is not supported. This will impact performance.
3507.556 ops/ms
# Warmup Iteration   2: 3657.267 ops/ms
Iteration   1: 3533.396 ops/ms
Iteration   2: 3638.140 ops/ms
Iteration   3: 3536.143 ops/ms
Iteration   4: 3518.328 ops/ms


Result "ch.qos.logback.perf.FileAppenderBenchmark.log4j2File":
  3556.502 ±(99.9%) 355.318 ops/ms [Average]
  (min, avg, max) = (3518.328, 3556.502, 3638.140), stdev = 54.986
  CI (99.9%): [3201.183, 3911.820] (assumes normal distribution)


# JMH version: 1.29
# VM version: JDK 17.0.7, OpenJDK 64-Bit Server VM, 17.0.7+7-LTS
# VM invoker: /Users/mariankazimir/Library/Java/JavaVirtualMachines/corretto-17.0.7/Contents/Home/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint
# Warmup: 2 iterations, 10 s each
# Measurement: 4 iterations, 10 s each
# Timeout: 3 s per iteration, ***WARNING: The timeout might be too low!***
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: ch.qos.logback.perf.FileAppenderBenchmark.logbackFile

# Run progress: 66.67% complete, ETA 00:02:01
# Fork: 1 of 1
# Warmup Iteration   1: WARNING: sun.reflect.Reflection.getCallerClass is not supported. This will impact performance.
3642.238 ops/ms
# Warmup Iteration   2: 3690.707 ops/ms
Iteration   1: 3631.691 ops/ms
Iteration   2: 3396.009 ops/ms
Iteration   3: 3130.448 ops/ms
Iteration   4: 3130.841 ops/ms


Result "ch.qos.logback.perf.FileAppenderBenchmark.logbackFile":
  3322.247 ±(99.9%) 1559.021 ops/ms [Average]
  (min, avg, max) = (3130.448, 3322.247, 3631.691), stdev = 241.260
  CI (99.9%): [1763.226, 4881.268] (assumes normal distribution)


# JMH version: 1.29
# VM version: JDK 17.0.7, OpenJDK 64-Bit Server VM, 17.0.7+7-LTS
# VM invoker: /Users/mariankazimir/Library/Java/JavaVirtualMachines/corretto-17.0.7/Contents/Home/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint
# Warmup: 2 iterations, 10 s each
# Measurement: 4 iterations, 10 s each
# Timeout: 3 s per iteration, ***WARNING: The timeout might be too low!***
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: ch.qos.logback.perf.FileAppenderBenchmark.reload4jFile

# Run progress: 83.33% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: WARNING: sun.reflect.Reflection.getCallerClass is not supported. This will impact performance.
3070.578 ops/ms
# Warmup Iteration   2: 3078.580 ops/ms
Iteration   1: 3025.116 ops/ms
Iteration   2: 2854.915 ops/ms
Iteration   3: 2674.043 ops/ms
Iteration   4: 2619.029 ops/ms


Result "ch.qos.logback.perf.FileAppenderBenchmark.reload4jFile":
  2793.276 ±(99.9%) 1192.277 ops/ms [Average]
  (min, avg, max) = (2619.029, 2793.276, 3025.116), stdev = 184.506
  CI (99.9%): [1600.999, 3985.552] (assumes normal distribution)


# Run complete. Total time: 00:06:04

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                        Mode  Cnt     Score      Error   Units
AsyncWithFileAppenderBenchmark.log4j2AsyncFile  thrpt    4  3003.744 ±  461.601  ops/ms
AsyncWithFileAppenderBenchmark.logbackFile      thrpt    4  4169.654 ± 3028.969  ops/ms
AsyncWithFileAppenderBenchmark.reload4jFile     thrpt    4  2508.885 ±  653.253  ops/ms
FileAppenderBenchmark.log4j2File                thrpt    4  3556.502 ±  355.318  ops/ms
FileAppenderBenchmark.logbackFile               thrpt    4  3322.247 ± 1559.021  ops/ms
FileAppenderBenchmark.reload4jFile              thrpt    4  2793.276 ± 1192.277  ops/ms
