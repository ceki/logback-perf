➜  logback-perf git:(master) ✗ java -jar target/benchmarks.jar ".*FileAppenderBenchmark.*" -f 1 -tu ms -wi 2 -i 4 -to 3 -t 4
# JMH version: 1.29
# VM version: JDK 17.0.7, OpenJDK 64-Bit Server VM, 17.0.7+7-LTS
# VM invoker: /Users/mariankazimir/Library/Java/JavaVirtualMachines/corretto-17.0.7/Contents/Home/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint
# Warmup: 2 iterations, 10 s each
# Measurement: 4 iterations, 10 s each
# Timeout: 3 s per iteration, ***WARNING: The timeout might be too low!***
# Threads: 4 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: ch.qos.logback.perf.AsyncWithFileAppenderBenchmark.log4j2AsyncFile

# Run progress: 0.00% complete, ETA 00:06:00
# Fork: 1 of 1
# Warmup Iteration   1: Deleting files if existent.
About to delete [target/test-output/logback-async-perf.log]
About to delete [target/test-output/log4j2-async-perf.log]
About to delete [target/test-output/log4j-async-perf.log]
3114.891 ops/ms
# Warmup Iteration   2: ^C%                                                                                                                                                          
➜  logback-perf git:(master) ✗ java -jar target/benchmarks.jar ".*FileAppenderBenchmark.*" -f 1 -tu ms -wi 2 -i 4 -to 3 -t 4 
# JMH version: 1.29
# VM version: JDK 17.0.7, OpenJDK 64-Bit Server VM, 17.0.7+7-LTS
# VM invoker: /Users/mariankazimir/Library/Java/JavaVirtualMachines/corretto-17.0.7/Contents/Home/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint
# Warmup: 2 iterations, 10 s each
# Measurement: 4 iterations, 10 s each
# Timeout: 3 s per iteration, ***WARNING: The timeout might be too low!***
# Threads: 4 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: ch.qos.logback.perf.AsyncWithFileAppenderBenchmark.log4j2AsyncFile

# Run progress: 0.00% complete, ETA 00:06:00
# Fork: 1 of 1
# Warmup Iteration   1: Deleting files if existent.
2450.503 ops/ms
# Warmup Iteration   2: 2425.829 ops/ms
Iteration   1: 2286.265 ops/ms
Iteration   2: 2333.634 ops/ms
Iteration   3: 2353.273 ops/ms
Iteration   4: 2486.825 ops/ms


Result "ch.qos.logback.perf.AsyncWithFileAppenderBenchmark.log4j2AsyncFile":
  2364.999 ±(99.9%) 555.402 ops/ms [Average]
  (min, avg, max) = (2286.265, 2364.999, 2486.825), stdev = 85.949
  CI (99.9%): [1809.597, 2920.402] (assumes normal distribution)


# JMH version: 1.29
# VM version: JDK 17.0.7, OpenJDK 64-Bit Server VM, 17.0.7+7-LTS
# VM invoker: /Users/mariankazimir/Library/Java/JavaVirtualMachines/corretto-17.0.7/Contents/Home/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint
# Warmup: 2 iterations, 10 s each
# Measurement: 4 iterations, 10 s each
# Timeout: 3 s per iteration, ***WARNING: The timeout might be too low!***
# Threads: 4 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: ch.qos.logback.perf.AsyncWithFileAppenderBenchmark.logbackFile

# Run progress: 16.67% complete, ETA 00:05:01
# Fork: 1 of 1
# Warmup Iteration   1: Deleting files if existent.
About to delete [target/test-output/logback-async-perf.log]
About to delete [target/test-output/log4j2-async-perf.log]
About to delete [target/test-output/log4j-async-perf.log]
3217.461 ops/ms
# Warmup Iteration   2: 3249.897 ops/ms
Iteration   1: 3179.547 ops/ms
Iteration   2: 2883.515 ops/ms
Iteration   3: 2867.945 ops/ms
Iteration   4: 2902.252 ops/ms


Result "ch.qos.logback.perf.AsyncWithFileAppenderBenchmark.logbackFile":
  2958.315 ±(99.9%) 957.368 ops/ms [Average]
  (min, avg, max) = (2867.945, 2958.315, 3179.547), stdev = 148.154
  CI (99.9%): [2000.947, 3915.683] (assumes normal distribution)


# JMH version: 1.29
# VM version: JDK 17.0.7, OpenJDK 64-Bit Server VM, 17.0.7+7-LTS
# VM invoker: /Users/mariankazimir/Library/Java/JavaVirtualMachines/corretto-17.0.7/Contents/Home/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint
# Warmup: 2 iterations, 10 s each
# Measurement: 4 iterations, 10 s each
# Timeout: 3 s per iteration, ***WARNING: The timeout might be too low!***
# Threads: 4 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: ch.qos.logback.perf.AsyncWithFileAppenderBenchmark.reload4jFile

# Run progress: 33.33% complete, ETA 00:04:02
# Fork: 1 of 1
# Warmup Iteration   1: Deleting files if existent.
About to delete [target/test-output/logback-async-perf.log]
About to delete [target/test-output/log4j2-async-perf.log]
About to delete [target/test-output/log4j-async-perf.log]
2037.943 ops/ms
# Warmup Iteration   2: 2059.679 ops/ms
Iteration   1: 2077.659 ops/ms
Iteration   2: 1962.004 ops/ms
Iteration   3: 1994.494 ops/ms
Iteration   4: 2039.589 ops/ms


Result "ch.qos.logback.perf.AsyncWithFileAppenderBenchmark.reload4jFile":
  2018.436 ±(99.9%) 327.649 ops/ms [Average]
  (min, avg, max) = (1962.004, 2018.436, 2077.659), stdev = 50.704
  CI (99.9%): [1690.787, 2346.086] (assumes normal distribution)


# JMH version: 1.29
# VM version: JDK 17.0.7, OpenJDK 64-Bit Server VM, 17.0.7+7-LTS
# VM invoker: /Users/mariankazimir/Library/Java/JavaVirtualMachines/corretto-17.0.7/Contents/Home/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint
# Warmup: 2 iterations, 10 s each
# Measurement: 4 iterations, 10 s each
# Timeout: 3 s per iteration, ***WARNING: The timeout might be too low!***
# Threads: 4 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: ch.qos.logback.perf.FileAppenderBenchmark.log4j2File

# Run progress: 50.00% complete, ETA 00:03:02
# Fork: 1 of 1
# Warmup Iteration   1: WARNING: sun.reflect.Reflection.getCallerClass is not supported. This will impact performance.
3196.783 ops/ms
# Warmup Iteration   2: 2861.073 ops/ms
Iteration   1: 2914.975 ops/ms
Iteration   2: 2928.882 ops/ms
Iteration   3: 2818.363 ops/ms
Iteration   4: 2892.529 ops/ms


Result "ch.qos.logback.perf.FileAppenderBenchmark.log4j2File":
  2888.687 ±(99.9%) 318.040 ops/ms [Average]
  (min, avg, max) = (2818.363, 2888.687, 2928.882), stdev = 49.217
  CI (99.9%): [2570.647, 3206.728] (assumes normal distribution)


# JMH version: 1.29
# VM version: JDK 17.0.7, OpenJDK 64-Bit Server VM, 17.0.7+7-LTS
# VM invoker: /Users/mariankazimir/Library/Java/JavaVirtualMachines/corretto-17.0.7/Contents/Home/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint
# Warmup: 2 iterations, 10 s each
# Measurement: 4 iterations, 10 s each
# Timeout: 3 s per iteration, ***WARNING: The timeout might be too low!***
# Threads: 4 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: ch.qos.logback.perf.FileAppenderBenchmark.logbackFile

# Run progress: 66.67% complete, ETA 00:02:01
# Fork: 1 of 1
# Warmup Iteration   1: WARNING: sun.reflect.Reflection.getCallerClass is not supported. This will impact performance.
2733.330 ops/ms
# Warmup Iteration   2: 2780.007 ops/ms
Iteration   1: 2758.236 ops/ms
Iteration   2: 2596.537 ops/ms
Iteration   3: 2441.353 ops/ms
Iteration   4: 2466.399 ops/ms


Result "ch.qos.logback.perf.FileAppenderBenchmark.logbackFile":
  2565.631 ±(99.9%) 938.983 ops/ms [Average]
  (min, avg, max) = (2441.353, 2565.631, 2758.236), stdev = 145.309
  CI (99.9%): [1626.648, 3504.614] (assumes normal distribution)


# JMH version: 1.29
# VM version: JDK 17.0.7, OpenJDK 64-Bit Server VM, 17.0.7+7-LTS
# VM invoker: /Users/mariankazimir/Library/Java/JavaVirtualMachines/corretto-17.0.7/Contents/Home/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint
# Warmup: 2 iterations, 10 s each
# Measurement: 4 iterations, 10 s each
# Timeout: 3 s per iteration, ***WARNING: The timeout might be too low!***
# Threads: 4 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: ch.qos.logback.perf.FileAppenderBenchmark.reload4jFile

# Run progress: 83.33% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: WARNING: sun.reflect.Reflection.getCallerClass is not supported. This will impact performance.
1604.003 ops/ms
# Warmup Iteration   2: 1699.738 ops/ms
Iteration   1: 1675.263 ops/ms
Iteration   2: 1577.313 ops/ms
Iteration   3: 1514.740 ops/ms
Iteration   4: 1534.961 ops/ms


Result "ch.qos.logback.perf.FileAppenderBenchmark.reload4jFile":
  1575.569 ±(99.9%) 461.345 ops/ms [Average]
  (min, avg, max) = (1514.740, 1575.569, 1675.263), stdev = 71.394
  CI (99.9%): [1114.225, 2036.914] (assumes normal distribution)


# Run complete. Total time: 00:06:03

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                        Mode  Cnt     Score     Error   Units
AsyncWithFileAppenderBenchmark.log4j2AsyncFile  thrpt    4  2364.999 ± 555.402  ops/ms
AsyncWithFileAppenderBenchmark.logbackFile      thrpt    4  2958.315 ± 957.368  ops/ms
AsyncWithFileAppenderBenchmark.reload4jFile     thrpt    4  2018.436 ± 327.649  ops/ms
FileAppenderBenchmark.log4j2File                thrpt    4  2888.687 ± 318.040  ops/ms
FileAppenderBenchmark.logbackFile               thrpt    4  2565.631 ± 938.983  ops/ms
FileAppenderBenchmark.reload4jFile              thrpt    4  1575.569 ± 461.345  ops/ms
